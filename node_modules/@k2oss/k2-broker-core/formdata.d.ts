export {}

declare global {
    /**
     * The FormData interface provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. 
     * It uses the same format a form would use if the encoding type were set to "multipart/form-data".
     */
    interface FormData {
        /**
         * Appends a new value onto an existing key inside a FormData object context entries, or adds the key if it does not already exist.
         * @param name The name of the field whose data is contained in value.
         * @param value The field's value. This can be a string or Blob. If none of these are specified, append returns without doing anything.
         * @param filename (Optional) The filename reported to the server (a string), when a Blob is passed as the second parameter. 
         *                 The default filename for Blob objects is "attachment.bin" if none is specified.
         */
        append(name: string, value: string | Blob, filename?: string): void;
    }

    const FormData: {
        prototype: FormData;
        new(): FormData;
    }
}